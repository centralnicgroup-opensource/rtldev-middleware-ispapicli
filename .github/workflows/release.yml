name: Release
on:
  workflow_run:
    workflows: 
    - Receive Push
    types:
      - completed
jobs:
  generate-linux-bin:
    name: Generate Linux bin
    if: github.event.workflow_run.head_branch == 'master' && github.event.workflow_run.conclusion == 'success'
    runs-on: ubuntu-18.04
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Checkout python
        uses: actions/setup-python@v2
        with:
          python-version: ${{ secrets.PYTHON_MIN_VERSION }}
      - name: Install dependencies
        run: |
          pip install --upgrade pip
          pip -V
          pip install --upgrade -e .
      - name: Run Pyinstaller
        run: |
          "./scripts/linux-pyinstaller.sh"
        # upload linux-binary
      - name: Upload linux-binary
        uses: actions/upload-artifact@v2
        with:
          name: linux-binary
          path: linux-binary-latest.zip
          retention-days: 1
  generate-macos-bin:
    name: Generate MacOS bin
    if: github.event.workflow_run.head_branch == 'master' && github.event.workflow_run.conclusion == 'success'
    runs-on: macos-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Checkout python
        uses: actions/setup-python@v2
        with:
          python-version: ${{ secrets.PYTHON_MIN_VERSION }}
      - name: Install dependencies
        run: |
          pip install --upgrade pip
          pip -V
          pip install --upgrade -e .
      - name: Run Pyinstaller
        run: |
          "./scripts/macos-pyinstaller.sh"
        # upload macos-binary 
      - name: Upload macos-binary
        uses: actions/upload-artifact@v2
        with:
          name: macos-binary
          path: macos-binary-latest.zip
          retention-days: 1
  generate-win-bin:
    name: Generate Win bin
    if: github.event.workflow_run.head_branch == 'master' && github.event.workflow_run.conclusion == 'success'
    runs-on: windows-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Checkout python
        uses: actions/setup-python@v2
        with:
          python-version: ${{ secrets.PYTHON_MIN_VERSION }}
      - name: Install dependencies
        run: |
          pip install --upgrade pip
          pip -V
          pip install --upgrade -e .
      - name: Run Pyinstaller
        run: |
          & "./scripts/win-pyinstaller.ps1"
        # upload win-binary
      - name: Upload win-binary
        uses: actions/upload-artifact@v2
        with:
          name: win-binary
          path: win-binary-latest.zip
          retention-days: 1
  release:
    name: Release Job
    runs-on: ubuntu-latest
    needs:
      - generate-linux-bin
      - generate-macos-bin
      - generate-win-bin
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
          persist-credentials: false
      - uses: actions/setup-python@v2
        with:
          python-version: ${{ secrets.PYTHON_MIN_VERSION }}
      - name: Install dependencies
        run: |
          pip install --upgrade pip testresources setuptools wheel
          pip -V
          pip install --upgrade -e .
      - name: Setup NodeJS LTS
        uses: actions/setup-node@v2
      - name: Install dependencies
        run: |
          npm prune && npm i
          gulp validate
      # download all our binary files
      - name: Download Artifacts
        uses: actions/download-artifact@v2
        with:
          path: artifacts
      - name: Release
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
          TWINE_USERNAME: ${{ secrets.TWINE_USERNAME }}
          TWINE_PASSWORD: ${{ secrets.TWINE_PASSWORD }}
        run: npx semantic-release
